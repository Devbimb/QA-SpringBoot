package com.example.service;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.example.exception.BandNotFoundException;
import com.example.persistence.domain.Band;
import com.example.persistence.repo.BandRepository;

@Service
public class BandService {
	private BandRepository repo;

	public BandService(BandRepository repo) {
		super();
		this.repo = repo;
	}
	
	public Band addBand(Band bd1) {
		return this.repo.save(bd1);
	}
	public List<Band> readBand() {
		return this.repo.findAll();
	}
	
	public Band updateBand(long id, Band bd2) {
		Band temp = this.repo.findById(id).orElseThrow(BandNotFoundException::new);
		Optional<Band> myTempBand = Optional.of(temp);
		Band existing = myTempBand.get();
		// existing.setId(bd2.getId()); //from request body //don't do it primary key
		existing.setName(bd2.getName()); // from request body
		existing.setPhone(bd2.getPhone()); // from request body
		return this.repo.save(existing);
		
	}
	
	public boolean deleteBand(Long id) {
	this.repo.deleteById(id); // delete without info
	boolean exists = this.repo.existsById(id);
	return !exists;
	}

	public List<Band> getBandbyPhone(Long phone) {
		return this.repo.findBandByPhone(phone);
	}

	public List<Band> getBandbyName(String name) {
		return this.repo.findBandByName(name);
	}

	public List<Band> getBandbyMusician(String musicians) {
		return this.repo.findBandByMusician(musicians);
	}	
}
